/**
 * Web3.LOC Configuration
 * Centralized configuration for the public contract discovery platform
 */

const CONFIG = {
    // Centralized GitHub Storage (Public Repository)
    GITHUB: {
        // Public repository for all contract data
        REPO: 'Web3LOC/contract-storage',
        
        // GitHub API endpoints
        API_BASE: 'https://api.github.com',
        RAW_BASE: 'https://raw.githubusercontent.com/Web3LOC/contract-storage/main',
        
        // Paths in the repository
        PATHS: {
            CONTRACTS: 'contracts',
            INDEX: 'index/contract_index.json',
            STATS: 'index/statistics.json',
            ETHEREUM: 'contracts/ethereum',
            BASE: 'contracts/base'
        }
    },

    // Blockchain API Configuration
    APIS: {
        ETHERSCAN: {
            BASE_URL: 'https://api.etherscan.io/api',
            // Using a rate-limited public key for demo
            API_KEY: 'YourEtherscanAPIKey',
            RATE_LIMIT: 5, // requests per second
            TIMEOUT: 10000
        },
        BASESCAN: {
            BASE_URL: 'https://api.basescan.org/api',
            // Using a rate-limited public key for demo
            API_KEY: 'YourBasescanAPIKey',
            RATE_LIMIT: 5, // requests per second
            TIMEOUT: 10000
        }
    },

    // Scanning Configuration
    SCANNER: {
        // 24/7 continuous scanning at 4 calls per second
        ENABLED: true,
        RATE: 4, // calls per second (total across both networks)
        NETWORKS: ['ethereum', 'base'],
        
        // Scanning strategies
        STRATEGIES: {
            // Scan recent blocks for new contracts
            RECENT_BLOCKS: {
                enabled: true,
                lookback: 100, // blocks to scan back
                interval: 15000 // 15 seconds
            },
            
            // Scan popular contracts
            POPULAR_CONTRACTS: {
                enabled: true,
                interval: 300000 // 5 minutes
            },
            
            // Scan by address patterns
            ADDRESS_PATTERNS: {
                enabled: true,
                patterns: [
                    // Common contract deployment patterns
                    '0x00', '0x11', '0x22', '0x33', '0x44', '0x55',
                    '0x66', '0x77', '0x88', '0x99', '0xaa', '0xbb'
                ],
                interval: 600000 // 10 minutes
            }
        }
    },

    // Search Configuration
    SEARCH: {
        DEFAULT_LIMIT: 50,
        MAX_LIMIT: 500,
        
        // Search filters
        FILTERS: {
            CHAINS: ['ethereum', 'base'],
            TYPES: ['token', 'defi', 'nft', 'dao', 'bridge', 'other'],
            DATE_RANGES: ['24h', '7d', '30d', 'all']
        }
    },

    // Export Configuration
    EXPORT: {
        FORMATS: ['sol', 'csv', 'json', 'readme'],
        
        // File templates
        TEMPLATES: {
            SOL: {
                header: '// SPDX-License-Identifier: MIT\n// Contract discovered by Web3.LOC\n// Network: {network}\n// Address: {address}\n\n',
                footer: '\n// End of contract'
            },
            README: {
                template: `# Smart Contract Analysis

## Contract Information
- **Address**: {address}
- **Network**: {network}
- **Name**: {name}
- **Verified**: {verified}
- **Compiler**: {compiler}

## Summary
{summary}

## Source Code
\`\`\`solidity
{source}
\`\`\`

## ABI
\`\`\`json
{abi}
\`\`\`

---
*Generated by Web3.LOC - Smart Contract Discovery Platform*
`
            }
        }
    },

    // UI Configuration
    UI: {
        THEME: {
            primary: '#3B82F6',
            secondary: '#1E40AF',
            accent: '#F59E0B',
            success: '#10B981',
            warning: '#F59E0B',
            error: '#EF4444'
        },
        
        ANIMATIONS: {
            enabled: true,
            duration: 300
        },
        
        REFRESH_INTERVALS: {
            stats: 30000, // 30 seconds
            recent: 10000, // 10 seconds
            scanner_status: 5000 // 5 seconds
        }
    },

    // Cache Configuration
    CACHE: {
        CONTRACT_TTL: 3600000, // 1 hour
        STATS_TTL: 300000, // 5 minutes
        SEARCH_TTL: 60000, // 1 minute
        MAX_SIZE: 100 // maximum cached items
    },

    // Error Handling
    ERROR_HANDLING: {
        RETRY_ATTEMPTS: 3,
        RETRY_DELAY: 1000, // milliseconds
        FALLBACK_ENABLED: true
    },

    // Features
    FEATURES: {
        REAL_TIME_SCANNING: true,
        ADVANCED_SEARCH: true,
        EXPORT_CONTRACTS: true,
        ANALYTICS_DASHBOARD: true,
        CONTRACT_ANALYSIS: true
    }
};

// Contract type detection patterns
CONFIG.CONTRACT_PATTERNS = {
    token: [
        'totalSupply', 'balanceOf', 'transfer', 'approve',
        'ERC20', 'ERC721', 'ERC1155'
    ],
    defi: [
        'swap', 'liquidity', 'stake', 'yield', 'farming',
        'uniswap', 'sushiswap', 'compound', 'aave'
    ],
    nft: [
        'tokenURI', 'ownerOf', 'safeTransferFrom',
        'ERC721', 'ERC1155', 'NFT'
    ],
    dao: [
        'proposal', 'vote', 'governance', 'delegate',
        'DAO', 'Governor'
    ],
    bridge: [
        'bridge', 'lock', 'unlock', 'deposit', 'withdraw',
        'crosschain', 'relay'
    ]
};

// Make config globally available
window.CONFIG = CONFIG;

// Environment-specific overrides
if (typeof module !== 'undefined' && module.exports) {
    module.exports = CONFIG;
}
